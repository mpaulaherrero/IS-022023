@startuml playComunicationDiagram
skinparam EntityBackgroundColor white
skinparam BoundaryBackgroundColor white
skinparam ControlBackgroundColor white
skinparam ActorBackgroundColor white
skinparam noteBackgroundColor transparent
skinparam noteBorderColor transparent

actor "Player" as Playerr

control ":PlayController" as PlayController

entity ":Board" as Board
entity ":Game" as Game
entity ":Turn" as Turn
entity ":Player" as Player

entity ":Coordinate" as  Coordinate
entity ":Color" as Color
entity ":Error" as  Error

boundary BoardView
boundary PlayView
boundary MovementView
boundary ColorView
boundary ErrorView
boundary Message
boundary CoordinateView


Playerr -r-> PlayView
note on link
    play()
end note
PlayView ..> Message
note on link
    write()
end note
PlayView .d.> BoardView
note on link
    write(playController)
end note
PlayView .r.> MovementView
note on link
    interact(playController)
end note
BoardView .d.> ColorView
note on link
    write(color)
end note
BoardView ..> Message
note on link
    write()
    writeln()
end note
BoardView .d.> Coordinate
ColorView ..> Color
PlayView -d-> PlayController
note on link
    next()
    isTicTacToe()
end note

MovementView .u.> PlayController
note on link
    areAllTokensOnBoard()
    putToken(coordinate)
    getPutTokenError(coordinate)
    moveToken(coordinate, coordinate)
    getOriginMoveTokenError(coordinate)
    getTargetMoveTokenError(coordinate, coordinate)
end note

MovementView ..> CoordinateView
note on link
    read()
end note
CoordinateView .d.> Coordinate
MovementView ..> ErrorView
note on link
    write(error)
end note
MovementView .d.> Coordinate
MovementView ..> Error

BoardView .r.> PlayController
note on link
    getColor(coordinate)
end note
PlayController -r-> Game
note on link
    areAllTokensOnBoard()
    putToken(coordinate)
    getPutTokenError(coordinate)
    moveToken(coordinate, coordinate)
    getOriginMoveTokenError(coordinate)
    getTargetMoveTokenError(coordinate, coordinate)
    next()
    getActiveColor()
    getColor(coordinate)
    isTicTacToe()
end note
PlayController .l.> Coordinate
Game -r-> Turn
note on link
    next()
    getActiveColor()
    areAllTokensOnBoard()
    putToken(coordinate)
    getPutTokenError(coordinate)
    moveToken(coordinate, coordinate)
    getOriginMoveTokenError(coordinate)
    getTargetMoveTokenError(coordinate, coordinate)
end note
Game -down-> Board
note on link
    getColor(coordinate)
    isTicTacToe()
end note
Board ..> Coordinate
Board -down-> Color
ErrorView ..> Error
Turn ..> Board
note on link
    isTicTacToe()
end note
Turn ..> Coordinate
Turn -down-> Player
note on link
    getColor()
    areAllTokensOnBoard()
    putToken(coordinate)
    getPutTokenError(coordinate)
    moveToken(coordinate, coordinate)
    getOriginMoveTokenError(coordinate)
    getTargetMoveTokenError(coordinate, coordinate)
end note
Player ..> Coordinate
Player ..> Error
Player --> Board
Player --> Color
Game ..> Coordinates

@enduml